%% Get Range, Velocity, Spacial location of the given data cube
function [outputArg1,outputArg2] = Data_Cube_Imaging(DataCube,...
                                                     nfft_r,...
                                                     nfft_d,...
                                                     fc,...
                                                     fs,...
                                                     SweepTime,...
                                                     SweepBandwidth,...
                                                     Nt,...
                                                     Nr,...
                                                     RD_Th)
%Input definition
%   DataCube  : Data matrix with dimension of range-channel-chirp.
%   nfft_r    : FFT points on range dimension 
%   nfft_d    : FFT points on doppler dimension
%   fc        : Carrier frequency
%   fs        : Sample rate
%   SweepTime :
%   SweepBandwidth : 
%   Nt
%   Nr
%   RD_Th
%   Detailed explanation goes here

c = 3e8;
v_ant_pos = [0 0  0    0    0    0    0    0    0    0    0    0   ;...
             0 dt 2*dt 3*dt 4*dt 5*dt 3*dt 4*dt 5*dt 6*dt 7*dt 8*dt;...
             0 0  0    0    0    0    dt   dt   dt   dt   dt   dt ];
v_array = phased.ConformalArray('ElementPosition',v_ant_pos);

rngdop = phased.RangeDopplerResponse('PropagationSpeed',c,...
    'DopplerOutput','Speed','OperatingFrequency',fc,'SampleRate',fs,...
    'RangeMethod','FFT','PRFSource','Property',...
    'RangeWindow','Hann','PRF',1/(Nt*SweepTime),...
    'SweepSlope',SweepBandwidth/SweepTime,...
    'RangeFFTLengthSource','Property','RangeFFTLength',nfft_r,...
    'DopplerFFTLengthSource','Property','DopplerFFTLength',nfft_d,...
    'DopplerWindow','Hann');
[RangeDoppler,RangeGrid,DopplerGrid] = rngdop(DataCube);

RangeDopplerMap = squeeze(mag2db(abs(RangeDoppler(:,1,:))));
RangeDopplerMap = RangeDopplerMap-max(RangeDopplerMap(:));                     % Normalize map
peakmat = findpeaks2D(RangeDopplerMap,0,RD_Th);   
[rangeidx,dopidx] = ind2sub(size(RangeDopplerMap),find(peakmat));

AngleData = squeeze(RangeDopplerMap(ridx,:,:))';
xv(:,7:12) = xv(:,7:12).*exp(1i*2*pi*2*fc*2.8*1e-4/3e8);

doa = phased.BeamscanEstimator2D('SensorArray',v_array,'OperatingFrequency',fc, ...
    'DOAOutputPort',true,'NumSignals',2,'AzimuthScanAngles',-50:50,'ElevationScanAngles',-30:30);
[Pdoav,target_az_el_est] = doa(xv);

end

